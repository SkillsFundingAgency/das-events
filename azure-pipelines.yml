trigger:
  batch: true
  branches:
    include:
      - "*"

pr: none

workspace:
    clean: all

variables:
  - group: 'Prod Management Resources'
  - name: buildConfiguration
    value: 'release'
  - name: buildPlatform
    value: 'any cpu'

resources:
  repositories:
  - repository: das-platform-building-blocks
    type: github
    name: SkillsFundingAgency/das-platform-building-blocks
    ref: refs/heads/master
    endpoint: "GitHub (SFA)"

pool:
  name: 'DAS - Continuous Integration'
  demands: Agent.OS -equals Windows_NT

steps:
- task: gittools.gitversion.gitversion-task.GitVersion@5
  displayName: GitVersion
  inputs:
    updateAssemblyInfo: true

- task: SonarCloudPrepare@1
  displayName: Prepare SonarCloud analysis configuration
  condition: and(succeeded(), or(in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main'), eq(variables['Build.Reason'], 'PullRequest')))
  inputs:
    SonarCloud: ESFA - SonarCloud
    organization: $(SonarCloudOrganisationKey)
    scannerMode: MSBuild
    projectName: "$(Build.DefinitionName)"
    projectKey: SkillsFundingAgency_das-events

- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 4.3.0'
  inputs:
    versionSpec: 4.x

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: 'src/SFA.DAS.Events.sln'

- task: VSBuild@1
  displayName: 'Build solution src/SFA.DAS.Events.sln'
  inputs:
    solution: 'src/SFA.DAS.Events.sln'
    vsVersion: 15.0
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)/publish"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    clean: true

- task: VSTest@2
  displayName: 'VsTest - testAssemblies'
  inputs:
    testAssemblyVer2: '**/bin/**/*UnitTests.dll'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- template: azure-pipelines-templates/build/step/dependency-check.yml@das-platform-building-blocks
  
- task: SonarCloudAnalyze@1
  displayName: Run SonarCloud analysis
  condition: and(succeeded(), or(in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main'), eq(variables['Build.Reason'], 'PullRequest')))

- task: SonarCloudPublish@1
  displayName: Publish SonarCloud analysis results on build summary
  condition: and(succeeded(), or(in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main'), eq(variables['Build.Reason'], 'PullRequest')))
  inputs:
    pollingTimeoutSec: '300'

- task: NuGetCommand@2
  displayName: 'NuGet pack'
  inputs:
    command: pack
    packagesToPack: 'src\SFA.DAS.Events.Api.Client\SFA.DAS.Events.Api.Client.csproj;src\SFA.DAS.Events.Api.Types\SFA.DAS.Events.Api.Types.csproj;'
    packDestination: '$(build.artifactstagingdirectory)/publish'
    versioningScheme: byBuildNumber
    
- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    Contents: |
     azure/**
     src/**/bin/**/*.dacpac
    TargetFolder: '$(build.artifactstagingdirectory)/publish'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)/publish'